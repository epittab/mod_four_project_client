{"ast":null,"code":"var _jsxFileName = \"/Users/injaelee/Development/Flatiron/mod4/project/JobSearch/mod_four_project_client/src/Login/LoginContainer.js\";\nimport React from 'react';\nimport Register from './Register';\nimport Login from './Login';\nimport './LoginContainer.css';\n\nclass LoginContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      let formObj = this.state.form;\n      formObj[e.target.name] = e.target.value;\n      this.setState({\n        form: formObj\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      fetch('http://localhost:3001/user', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          first_name: this.state.form.first_name,\n          last_name: this.state.form.last_name,\n          username: this.state.form.username,\n          password: this.state.form.password\n        })\n      }).then(r => r.json()).then(data => {\n        this.setState({\n          form: {}\n        });\n        localStorage.setItem('token', data.token);\n        return console.log(data);\n      });\n    };\n\n    this.handleLoginSubmit = e => {\n      e.preventDefault();\n      fetch('http://localhost:3001/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          username: this.state.form.username,\n          password: this.state.form.password\n        })\n      }).then(r => r.json()).then(data => {\n        this.setState({\n          form: {}\n        }); // ok thanks for the data, what is this data, part of it is the token. \n        // store the token locally on the user's (customer/client) browser\n\n        localStorage.setItem('token', data.token);\n        return console.log(data);\n      });\n    };\n\n    this.state = {\n      form: {}\n    };\n  }\n\n  render() {\n    // let loggedIn = localStorage.getItem('token')\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"LoginContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, false ? /*#__PURE__*/React.createElement(Register, {\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit,\n      form: this.state.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 27\n      }\n    }) : /*#__PURE__*/React.createElement(Login, {\n      handleChange: this.handleChange,\n      handleSubmit: this.handleLoginSubmit,\n      form: this.state.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 27\n      }\n    }));\n  }\n\n}\n\nexport default LoginContainer;","map":{"version":3,"sources":["/Users/injaelee/Development/Flatiron/mod4/project/JobSearch/mod_four_project_client/src/Login/LoginContainer.js"],"names":["React","Register","Login","LoginContainer","Component","constructor","handleChange","e","formObj","state","form","target","name","value","setState","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","first_name","last_name","username","password","then","r","json","data","localStorage","setItem","token","console","log","handleLoginSubmit","render"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport Register from './Register'\nimport Login from './Login'\n\nimport './LoginContainer.css'\n\nclass LoginContainer extends React.Component {\n\n    constructor(){\n        super()\n        this.state ={\n            form: {}\n        }\n    }\n\n    handleChange = (e) => {\n        let formObj = this.state.form\n        formObj[e.target.name] = e.target.value\n        this.setState({form: formObj})\n    }\n\n    handleSubmit = (e) => {\n        \n        e.preventDefault()\n        fetch('http://localhost:3001/user', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify({\n                first_name: this.state.form.first_name,\n                last_name: this.state.form.last_name,\n                username: this.state.form.username,\n                password: this.state.form.password,\n            })\n        })\n        .then(r => r.json())\n        .then(data => {\n            this.setState({form: {}})\n            localStorage.setItem('token', data.token)\n            return console.log(data)\n        })\n    }\n\n    handleLoginSubmit = (e) => {\n        e.preventDefault()\n        fetch('http://localhost:3001/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify({\n                username: this.state.form.username,\n                password: this.state.form.password,\n            })\n        })\n        .then(r => r.json())\n        .then(data => {\n            this.setState({form: {}})\n            // ok thanks for the data, what is this data, part of it is the token. \n            // store the token locally on the user's (customer/client) browser\n            localStorage.setItem('token', data.token)\n            return console.log(data)\n        })\n    }\n\n\n\n    render() {\n        // let loggedIn = localStorage.getItem('token')\n        return(\n            <div className='LoginContainer'>\n                {/* if loggedIn == true  */}\n                { false ? < Register handleChange={this.handleChange} \n                            handleSubmit={this.handleSubmit}\n                            form={this.state.form}/> \n                        : < Login handleChange={this.handleChange} \n                            handleSubmit={this.handleLoginSubmit}\n                            form={this.state.form}/> }\n\n            </div>\n        )\n\n    }\n}\n\nexport default LoginContainer;"]},"metadata":{},"sourceType":"module"}